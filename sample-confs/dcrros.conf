[Application Options]

; ------------------------------------------------------------------------------
; Data settings
; ------------------------------------------------------------------------------

; Root for all dcrros data.
; appdata = ~/.dcrros

; Underlying DB implementation to use. Currently accepted values:
;   - badger: Default implementation with persistent data.
;   - badger-mem: Badger running in memory-only mode.
;   - mem: Custom memory-only implementation.
;
; The memory-only alternatives are useful for development and for benchmarking
; syning performance.
;
; dbtype = badger

; ------------------------------------------------------------------------------
; Network settings
; ------------------------------------------------------------------------------

; By default, dcrros will run on mainnet. To run on another network, uncomment
; the appropriate network selector.
;
; testnet = 1
; simnet = 1

; Specify the interfaces to listen on. This can be specified multiple times.
; If unspecified, then dcrros will listen for connections on all interfaces, at
; a default port for the active network. The ports are:
;
;   - mainnet: 9128
;   - testnet: 19128
;   - simnet: 29128
;
; listen = 127.0.0.1:2030


; Enable go's cpu and memory profiler in the given network address.
; profile = 127.0.0.1:6060

; ------------------------------------------------------------------------------
; Dcrd connection settings
; ------------------------------------------------------------------------------

; Address of dcrd's RPC interface. If unspecified, this will be automatically
;  determined based on the active network in the following way:
;
;   mainnet: 127.0.0.1:9109
;   testnet: 127.0.0.1:19109
;   simnet: 127.0.0.1:19956
;
; dcrdconnect =

; This should match dcrd's 'rpcuser' config.
; dcrduser = some-username

; This should match dcrd's 'rpcpass' config.
; dcrdpass = some-password

; Location of dcrd's RPC TLS certficate file.
; dcrdcertpath = ~/.dcrd/rpc.cert

; ------------------------------------------------------------------------------
; Embedded dcrd config
; ------------------------------------------------------------------------------

; Specify a dcrd binary to run. When this setting is specified, dcrros will run
; in "embedded dcrd" mode: it will run the given dcrd executable with a matching
; network and rpc settings, connect to it, and control it during its lifetime.
;
; If the underlying dcrd process terminates for any reason, dcrros will also
; terminate.
;
; If the binary can be found in the executing' dcrros' PATH, then this can be
; a relative path.
; rundcrd = /path/to/dcrd

; Extra arguments to specify to the embedded dcrd instance. This is used to
; customize the embedded dcrd instance without having to modify the default
; dcrd config file (~/.dcrd/dcrd.conf).
;
; This can be specified multiple times. Some example arguments:
;
; dcrdextraarg = --appdata=/data/dcrd
; dcrdextraarg = --nolisten
; dcrdextraarg = --addpeer=192.168.1.1
; dcrdextraarg =

; Whether to run in offline mode. When offline mode is specified, dcrd is
; started configured such that it does not perform any outbound connections to
; remote peers. This is useful to run an offline Construction API dcrros
; instance.
;
; offline = 1


; ------------------------------------------------------------------------------
; Logging
; ------------------------------------------------------------------------------

; Log verbosity.
; Valid levels are {trace, debug, info, warn, error, critical}
; You may also specify <subsystem>=<level>,<subsystem2>=<level>,... to set
; log level for individual subsystems.  Use dcrros --debuglevel=show to list
; available subsystems.
;
; debuglevel = info

