name: E2E Test Suite
on: [push, pull_request]

jobs:
  build:
    name: Build E2E Binaries
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Checkout dcrd
        uses: actions/checkout@v2
        with:
          repository: decred/dcrd
          ref: release-v1.6.2
          path: dcrd
      - name: Checkout dcrwallet
        uses: actions/checkout@v2
        with:
          repository: decred/dcrwallet
          ref: release-v1.6.3
          path: dcrwallet
      - name: Checkout rosetta-cli
        uses: actions/checkout@v2
        with:
          repository: coinbase/rosetta-cli
          ref: v0.7.2
          path: rosetta-cli
      - name: Checkout dcrros
        uses: actions/checkout@v2
        with:
          path: dcrros

      - name: Manage build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build dcrd
        working-directory: dcrd
        run: go install .
      - name: Build dcrwallet
        working-directory: dcrwallet
        run: go install .
      - name: Build rosetta-cli
        working-directory: rosetta-cli
        run: go install .
      - name: Build dcrros
        working-directory: dcrros
        run: go install .
      - name: Build e2etest
        working-directory: dcrros
        run: go install ./internal/e2etest

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dcrros-e2e-bins
          path: ~/go/bin

  e2etest:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        dbtype: [mem, badger, badgermem]
    name: E2E Test
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dcrros-e2e-bins
          path: ~/bin
      - name: Setup the PATH env
        run: |
          echo "$HOME/bin" >> $GITHUB_PATH
          chmod -R a+rx "$HOME/bin"
      - name: Run e2etest
        run: e2etest -debuglevel debug -appdata /tmp/data
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-results-${{ matrix.dbtype }}
          path: /tmp/data/*.log


